<UserControl
    x:Class="SigfolioWallet.Controls.CustomNavView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SigfolioWallet"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:SigfolioWallet.Core.ViewModels"
    xmlns:controls="using:SigfolioWallet.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>
        <DataTemplate x:Key="NavigationViewMenuItemTemplate1" >

        </DataTemplate>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="PaneToggleButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
            <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}"/>
            <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}"/>
            <Setter Property="Content" Value="&#xE700;"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" Height="{TemplateBinding MinHeight}" Margin="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPointerOver}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="White"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushPressed}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundDisabled}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushDisabled}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundChecked}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushChecked}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundChecked}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundCheckedPointerOver}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushCheckedPointerOver}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundCheckedPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundCheckedPressed}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushCheckedPressed}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundCheckedPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundCheckedDisabled}"/>
                                            <Setter Target="RevealBorder.BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrushCheckedDisabled}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundCheckedDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Left" Width="{TemplateBinding MinWidth}">
                                <Viewbox x:Name="IconHost" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="16" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="16">
                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Foreground="White" Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"/>
                                </Viewbox>
                            </Grid>
                            <Border x:Name="RevealBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle" TargetType="ContentControl">
            <Setter Property="FontWeight" Value="SemiLight"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="Margin" Value="12,5,0,11"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="NavigationViewItemHeaderTextStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>
        <Style x:Key="NavigationViewStyle1" TargetType="NavigationView">
            <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="NavigationView">
                        <Grid x:Name="RootGrid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="DisplayModeGroup">
                                    <VisualState x:Name="Compact"/>
                                    <VisualState x:Name="Expanded">
                                        <VisualState.Setters>
                                            <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource NavigationViewExpandedPaneBackground}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Minimal">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Margin" Value="48,5,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="MinimalWithBackButton">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Margin" Value="104,5,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TogglePaneGroup">
                                    <VisualState x:Name="TogglePaneButtonVisible"/>
                                    <VisualState x:Name="TogglePaneButtonCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="TogglePaneButton.Visibility" Value="Collapsed"/>
                                            <Setter Target="PaneContentGridToggleButtonRow.Height" Value="4"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeaderGroup">
                                    <VisualState x:Name="HeaderVisible"/>
                                    <VisualState x:Name="HeaderCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SettingsGroup">
                                    <VisualState x:Name="SettingsVisible"/>
                                    <VisualState x:Name="SettingsCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="SettingsNavPaneItem.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="AutoSuggestGroup">
                                    <VisualState x:Name="AutoSuggestBoxVisible"/>
                                    <VisualState x:Name="AutoSuggestBoxCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneStateGroup">
                                    <VisualState x:Name="NotClosedCompact"/>
                                    <VisualState x:Name="ClosedCompact">
                                        <VisualState.Setters>
                                            <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed"/>
                                            <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                    <VisualState x:Name="ListSizeFull"/>
                                    <VisualState x:Name="ListSizeCompact">
                                        <VisualState.Setters>
                                            <Setter Target="MenuItemsHost.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="MenuItemsHost.Width" Value="{Binding CompactPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                    <VisualState x:Name="TitleBarVisible"/>
                                    <VisualState x:Name="TitleBarCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="PaneButtonGrid.Margin" Value="0,32,0,0"/>
                                            <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PaneToggleButtonGrid" HorizontalAlignment="Left" Margin="0,0,0,8" VerticalAlignment="Top" Canvas.ZIndex="100">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="TogglePaneTopPadding"/>
                                <Grid x:Name="ButtonHolderGrid" Grid.Row="1">
                                    <Button x:Name="NavigationViewBackButton" IsEnabled="{TemplateBinding IsBackEnabled}" Style="{StaticResource NavigationBackButtonNormalStyle}" VerticalAlignment="Top"/>
                                    <Button  x:Name="TogglePaneButton" AutomationProperties.LandmarkType="Navigation" Style="{TemplateBinding PaneToggleButtonStyle}" VerticalAlignment="Top"/>
                                </Grid>
                            </Grid>
                            <SplitView x:Name="RootSplitView" Background="{TemplateBinding Background}" CompactPaneLength="{TemplateBinding CompactPaneLength}" DisplayMode="Inline" IsTabStop="False" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenPaneLength="{TemplateBinding OpenPaneLength}" PaneBackground="{ThemeResource NavigationViewDefaultPaneBackground}">
                                <SplitView.Pane>
                                    <Grid x:Name="PaneContentGrid">
                                        <!--<Grid.Background>
                                            <AcrylicBrush BackgroundSource="HostBackdrop" TintColor="{StaticResource NavBackground}" TintOpacity="0.8" FallbackColor="{StaticResource NavBackground}"/>
                                        </Grid.Background>-->
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="8"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="8"/>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="ContentPaneTopPadding"/>
                                        <Grid Height="{StaticResource PaneToggleButtonHeight}" Grid.Row="2">
                                            <TextBlock x:Name="PaneTitleTextBlock" HorizontalAlignment="Left" Style="{StaticResource NavigationViewItemHeaderTextStyle}" Text="{TemplateBinding PaneTitle}" VerticalAlignment="Center"/>
                                        </Grid>
                                        <Grid Name="ccNameGrid" Grid.Row="3" HorizontalAlignment="Center" Margin="0 0 0 0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <ContentControl x:Name="ccName" Grid.Row="0" HorizontalAlignment="Center" Width="106" IsTabStop="False" Margin="9,0,16,0" VerticalContentAlignment="Center">
                                                <ContentControl.Content>
                                                    <Grid>
                                                        <Button Background="Transparent" Foreground="Transparent" Padding="0 0 0 0">
                                                            <Button.Resources>
                                                                <SolidColorBrush Color="Transparent" x:Key="ButtonBackgroundPointerOver"/>
                                                                <SolidColorBrush Color="Transparent"  x:Key="ButtonBackgroundPressed"/>
                                                                <SolidColorBrush Color="Transparent" x:Key="ButtonForegroundPointerOver"/>
                                                                <SolidColorBrush Color="Transparent" x:Key="ButtonForegroundPressed"/>
                                                                <SolidColorBrush Color="Transparent" x:Key="ButtonBorderBrushPointerOver"/>
                                                                <SolidColorBrush Color="Transparent" x:Key="ButtonBorderBrushPressed"/>
                                                            </Button.Resources>
                                                            <Ellipse x:Name="ellName" Fill="White" Height="100" Width="100" />
                                                            <Button.Flyout>

                                                                <MenuFlyout x:Name="ellFlyout">
                                                                    <MenuFlyout.MenuFlyoutPresenterStyle>
                                                                        <Style TargetType="MenuFlyoutPresenter">
                                                                            <Setter Property="MaxWidth" Value="1900" />
                                                                            <Setter Property="Background" Value="{ThemeResource SystemControlAcrylicElementBrush}"/>
                                                                        </Style>
                                                                    </MenuFlyout.MenuFlyoutPresenterStyle>
                                                                    <MenuFlyoutItem Text="GCWZJ52KTQD565BSLHGXMDR4IA2KU6QFPYWXR4F4CQ2R6DZMTD7UO5MV" />
                                                                    <MenuFlyoutItem Text="GB72RBWW7YDFUR3UIFZUKOTIETBVMVSC4IR7HHEHGTCDTXZ4AETSQMNF" />
                                                                </MenuFlyout>

                                                            </Button.Flyout>

                                                        </Button>
                                                        <TextBlock IsHitTestVisible="False" x:Name="txtName" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="SemiLight" FontFamily="Segoe UI"  Foreground="#275AF0" Text="TEST" FontSize="30"/>
                                                        <FontIcon IsHitTestVisible="False" Name="txtNameChevron" Glyph="&#xE70D;" Margin="0 60 0 0" Foreground="#275AF0" FontSize="12" />

                                                    </Grid>



                                                </ContentControl.Content>
                                            </ContentControl>

                                            <TextBlock  Name="txtAmount" Grid.Row="2"  HorizontalAlignment="Center" Text="10,000.000" FontSize="32"  Foreground="White"></TextBlock>
                                            <TextBlock  Name="txtAsset" Grid.Row="3" HorizontalAlignment="Center" Text="XLM" Opacity=".5"  Foreground="White"></TextBlock>
                                        </Grid>
                                        <Grid x:Name="AutoSuggestArea" Height="44" Grid.Row="3"  VerticalAlignment="Center">
                                            <ContentControl x:Name="PaneAutoSuggestBoxPresenter" Content="{TemplateBinding AutoSuggestBox}" HorizontalContentAlignment="Stretch" IsTabStop="False" Margin="16,0,16,0" VerticalContentAlignment="Center"/>
                                            <Button x:Name="PaneAutoSuggestButton" Content="&#xE11A;" MinHeight="44" Style="{TemplateBinding PaneToggleButtonStyle}" Visibility="Collapsed" Width="{TemplateBinding CompactPaneLength}"/>
                                        </Grid>
                                        <NavigationViewList x:Name="MenuItemsHost" HorizontalAlignment="Stretch" ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}" ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}" ItemTemplate="{TemplateBinding MenuItemTemplate}" IsItemClickEnabled="True" ItemsSource="{TemplateBinding MenuItemsSource}" ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}" Margin="0,0,0,20" Grid.Row="5" SelectionMode="Single" SelectedItem="{TemplateBinding SelectedItem}"/>
                                        <Border x:Name="FooterContentBorder" Child="{TemplateBinding PaneFooter}" Grid.Row="6"/>

                                    </Grid>
                                </SplitView.Pane>
                                <Grid x:Name="ContentGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <ContentControl x:Name="HeaderContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" HorizontalContentAlignment="Stretch" IsTabStop="False" MinHeight="{StaticResource PaneToggleButtonHeight}" Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}" VerticalContentAlignment="Stretch"/>
                                    <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1"/>
                                </Grid>
                            </SplitView>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LockUnlockButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Red"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#00C2FF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#fff"/>
                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#00C2FF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#00C2FF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#fff"/>
                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="grid">
        <Grid.Resources>
            <Storyboard x:Name="btnLockUnlockWalletStoryboard">
                <DoubleAnimation x:Name="daLockUnlockStoryBoardAnimation" 
                EnableDependentAnimation="True"
                Storyboard.TargetName="btnLockUnlockWallet"
                Storyboard.TargetProperty="Width"
                Duration="0:0:0.12" />
            </Storyboard>
        </Grid.Resources>
        <NavigationView Margin="0 0 0 42"  Style="{StaticResource NavigationViewStyle1}" x:Name="MyNavView" Canvas.ZIndex="0" IsBackButtonVisible="Collapsed" IsBackEnabled="False" PaneTitle="Sigfolio Wallet">
            <NavigationView.HeaderTemplate>
                <DataTemplate x:DataType="controls:CustomNavView">
                    <TextBlock x:Name="tbTitle" FontSize="32" FontWeight="Bold" Text="TEST" Margin="20 20 0 20"></TextBlock>
                </DataTemplate>
            </NavigationView.HeaderTemplate>
            <NavigationView.MenuItems>
                <NavigationViewItem Foreground="White" Content="Home" Tag="Home">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE80F;" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem Foreground="White" Content="Transactions" Tag="Transactions">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE81C;" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem Foreground="White" Content="SendReceive" Tag="SendReceive">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE8EB;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem Foreground="White" Content="Settings" Tag="Settings">
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE713;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </NavigationView.MenuItems>
            <Frame x:Name="PageContent"  Margin="24">
                <Frame.ContentTransitions>
                    <TransitionCollection>
                        <NavigationThemeTransition/>
                    </TransitionCollection>
                </Frame.ContentTransitions>
            </Frame>
        </NavigationView>
        <Button x:Name="btnLockUnlockWallet" Style="{StaticResource LockUnlockButtonTemplate}" Width="{Binding OpenPaneLength, ElementName=MyNavView}" Canvas.ZIndex="1" Foreground="#FFF" Height="42" VerticalAlignment="Bottom">
            <StackPanel Orientation="Horizontal">
                <FontIcon HorizontalAlignment="Left" Glyph="&#xE72E;" />
                <TextBlock x:Name="txtLockUnlockWalletLabel" Padding="12 0 0 0" Text="Lock Wallet"/>
            </StackPanel>
        </Button>
    </Grid>
</UserControl>
